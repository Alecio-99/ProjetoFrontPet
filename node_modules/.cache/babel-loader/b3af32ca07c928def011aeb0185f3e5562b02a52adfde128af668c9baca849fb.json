{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repositorios\\\\FrontEnd\\\\JavaScript\\\\FrontEndPet\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport AuthController from '../controllers/AuthController';\nimport User from '../models/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    const result = await AuthController.login(email, password);\n    if (result.success) {\n      setUser(User.fromJSON(result.user));\n      setIsAuthenticated(true);\n    }\n    return result;\n  };\n  const register = async userData => {\n    const result = await AuthController.register(userData);\n    if (result.success) {\n      setUser(User.fromJSON(result.user));\n      setIsAuthenticated(true);\n    }\n    return result;\n  };\n  const logout = () => {\n    const result = AuthController.logout();\n    if (result.success) {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mbKa3mHmiYR6ypr2drLsAAm+MEk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","AuthController","User","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","login","email","password","result","success","fromJSON","register","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Repositorios/FrontEnd/JavaScript/FrontEndPet/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport AuthController from '../controllers/AuthController';\r\nimport User from '../models/User';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async (email, password) => {\r\n    const result = await AuthController.login(email, password);\r\n    if (result.success) {\r\n      setUser(User.fromJSON(result.user));\r\n      setIsAuthenticated(true);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    const result = await AuthController.register(userData);\r\n    if (result.success) {\r\n      setUser(User.fromJSON(result.user));\r\n      setIsAuthenticated(true);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const logout = () => {\r\n    const result = AuthController.logout();\r\n    if (result.success) {\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,IAAI,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,MAAM,GAAG,MAAMf,cAAc,CAACY,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;IAC1D,IAAIC,MAAM,CAACC,OAAO,EAAE;MAClBL,OAAO,CAACV,IAAI,CAACgB,QAAQ,CAACF,MAAM,CAACL,IAAI,CAAC,CAAC;MACnCD,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IACA,OAAOM,MAAM;EACf,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,MAAMJ,MAAM,GAAG,MAAMf,cAAc,CAACkB,QAAQ,CAACC,QAAQ,CAAC;IACtD,IAAIJ,MAAM,CAACC,OAAO,EAAE;MAClBL,OAAO,CAACV,IAAI,CAACgB,QAAQ,CAACF,MAAM,CAACL,IAAI,CAAC,CAAC;MACnCD,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IACA,OAAOM,MAAM;EACf,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAML,MAAM,GAAGf,cAAc,CAACoB,MAAM,CAAC,CAAC;IACtC,IAAIL,MAAM,CAACC,OAAO,EAAE;MAClBL,OAAO,CAAC,IAAI,CAAC;MACbF,kBAAkB,CAAC,KAAK,CAAC;IAC3B;IACA,OAAOM,MAAM;EACf,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEE,IAAI;MAAEE,KAAK;MAAEM,QAAQ;MAAEE;IAAO,CAAE;IAAAd,QAAA,EAC7EA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CApCWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAsCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGhC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}